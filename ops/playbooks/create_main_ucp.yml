###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- hosts: ucp_main
  gather_facts: false
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault

  vars:
    san_fqdns: "{% for host in groups['ucp']+groups['ucp_lb'] %}--san {{ host }}.{{ domain_name }} {% endfor %}"
    san_ips: "{% for host in groups['ucp']+groups['ucp_lb'] %} --san {{ hostvars[host].ip_addr | ipaddr('address') }} {% endfor %}"
    san_all_formatted: "{{ san_fqdns }} {{ san_ips }}"

  environment: "{{ env }}"

  roles:
    - role: hpe.openports
      hpe_openports_ports:
        - 443/tcp
        - 2376/tcp
        - 2377/tcp
        - 4194/tcp
        - 4789/udp
        - 6443/tcp
        - 6444/tcp
        - 7946/tcp
        - 7946/udp
        - 10248/tcp
        - 10250/tcp
        - 10256/tcp
        - 12376/tcp
        - 12378-12387/tcp

  tasks:

#
# Try to ping UCP, if it is there, healthy or not, we should not try to install UCP
#
    - set_fact: ucp_is_running=false
    - name: Ping UCP
      uri:
        url: "https://{{ inventory_hostname }}/_ping"
        headers:
          Content-Type: application/json
        method: GET
        status_code: 200,500
        validate_certs: no
      register: res
      failed_when: false
    - debug: var=res
    - set_fact: ucp_is_running=true
      when: res.status == 200 or res.status == 500

    - debug: var=ucp_is_running
      when: _debug is defined

    - name: Copy the license
      copy: src="{{ license_file }}" dest="/tmp/{{ license_file | basename }}"

#
# Install UCP if needed
#
    - name: Install swarm leader and first UCP node
      shell: docker run --rm --name ucp -v /var/run/docker.sock:/var/run/docker.sock docker/ucp:{{ ucp_version }} install --host-address {{ ip_addr | ipaddr('address') }}  --admin-username={{ ucp_username }} --admin-password={{ ucp_password }} --license "$(cat /tmp/{{ license_file | basename }})" --san "{{ groups['ucp_lb'][0] }}.{{ domain_name }}"
      register: output
      when: ucp_is_running == false

    - debug:
        var: output
      when: _debug is defined and ucp_is_running == false

