###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: dtr_main 
  gather_facts: false

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault
    - ../group_vars/backups

  vars:
    ovc: "{{ omnistack_ovc | random }}"
    nfs_vm: "{{ groups['nfs'][0] }}"
    sleep_interval: 5

  environment: "{{ env }}"

  tasks:
    - name: Get TimeStamp
      command: date -I'seconds' 
      register: timestamp

    - name: Store the timestamp
      set_fact:
        timestamp: "{{ timestamp.stdout }}"

    - name: Creates directory
      file:
        path: /root/scripts
        state: directory

    - name: Copy backup script to backup VM
      template: src=../templates/backup_dtr_classic.sh.j2 dest=/root/scripts/backup_dtr_classic.sh

    - file:
        path: /root/scripts/backup_dtr_classic.sh
        mode: 0744

    - name: Copy util to backup VM
      template: src=../templates/backup_dtr_get_replica.sh.j2 dest=/root/scripts/backup_dtr_get_replica.sh

    - file:
        path: /root/scripts/backup_dtr_get_replica.sh
        mode: 0744

    - name: Get the replica ID
      shell: /root/scripts/backup_dtr_get_replica.sh
      register: replica_id

    - set_fact:
        replica_id: " {{ replica_id.stdout }}" 
        backup_name:  "backup_dtr_{{ replica_id.stdout }}_{{ inventory_hostname }}_{{ timestamp }}"

    - name: Backup the metadata now
      shell: /root/scripts/backup_dtr_classic.sh {{ replica_id }} {{ backup_name }}
      register: res

    - debug: var=res
      when: _debug is defined

    - fetch: 
        src: /tmp/backup_dtr_data.tar
        dest: "{{ backup_dest }}/{{ backup_name }}_data.tar" 
        flat: true

    - fetch: 
        src: /tmp/backup_dtr_meta.tar
        dest: "{{ backup_dest }}/{{ backup_name }}_meta.tar" 
        flat: true
