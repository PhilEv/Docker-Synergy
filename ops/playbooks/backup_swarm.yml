###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: ucp_main
  gather_facts: false

  vars_files:
    - ../group_vars/vars
    - ../group_vars/backups
    - ../group_vars/vault

  environment: "{{ env }}"

  tasks:
    - name: Get TimeStamp
      command: date -I'seconds' 
      register: timestamp

    - name: Store the timestamp
      set_fact:
        timestamp: "{{ timestamp.stdout }}"

    - name: Creates directory on the VM 
      file:
        path: /root/scripts
        state: directory

    - name: Copy backup scripts to backup VM
      template: src=../templates/backup_swarm.sh.j2 dest=/root/scripts/backup_swarm.sh
    - file:
        path: /root/scripts/backup_swarm.sh
        mode: 0744

    - set_fact:
        backup_name:  "backup_swarm_{{ inventory_hostname }}_{{ timestamp }}"

    - name: How many nodes are active now
      shell: >
            (
             docker node ls -f "role=manager" --format "{{ '{{' }}.Status{{ '}}' }}" | grep Ready | wc -l )
      register: active_nodes


    - shell: echo $(( ({{ total }}+1)/2))
      vars:
        total: "{{ groups['ucp'] | length }}"
      register: quorum

    - debug:
        msg: "total={{ total }} quorum = {{ quorum.stdout }} active = {{ active_nodes.stdout }}"
      vars:
        total: "{{ groups['ucp'] | length }}"

    - fail:
        msg: "Aborting: Reason number of active nodes {{ active_nodes.stdout }} <= quorum = {{ quorum.stdout }}"
      when: active_nodes.stdout <= quorum.stdout
     
    - name: Backup swarm data now
      shell: /root/scripts/backup_swarm.sh {{ "unused" }} {{ backup_name }}
      register: res

    - debug: var=res
      when: _debug is defined

    - fetch: 
        src: /tmp/backup_swarm.tar
        dest: "{{ backup_dest }}/{{ backup_name }}.tar" 
        flat: true

